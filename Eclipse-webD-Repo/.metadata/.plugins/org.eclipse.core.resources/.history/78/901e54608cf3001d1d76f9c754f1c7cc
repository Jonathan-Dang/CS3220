package finals.connector;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import finals.model.BloodPresureModel;
import finals.model.Users;


public class DBConnector {
	private String url = "jdbc:mysql://cs3.calstatela.edu/cs3220stu64";

    private String username = "cs3220stu64";

    private String password = "vk3vUEYer6Gx";

    private Connection connection;
    
    public DBConnector()
    {
        try
        {
            connection = DriverManager.getConnection( url, username, password );
        }
        catch( SQLException e )
        {
            e.printStackTrace();
        }
    }

    public void close()
    {
        if( connection != null )
        {
            try
            {
                connection.close();
            }
            catch( SQLException e )
            {
                e.printStackTrace();
            }
        }
    }
    
    public void addEntry(int id, int s, int d)
    {
    	String sql = "insert into BEntries(userId, SystoicVal, DiastolicVal, entryTime) values (?,?,?)";
    	try {
    		PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
    		ps.setInt(1, id);
    		ps.setInt(2, s);
    		ps.setInt(3, d);
    		ps.setTimestamp(4, new Timestamp(System.currentTimeMillis()));
    		ps.executeUpdate();
    	} catch (SQLException e) {
    		e.printStackTrace();
    	}
    }
    
    public void addUser(String name)
    {
    	String sql = "insert into Users(names) values (?)";
    	try {
    		PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
    		ps.setString(1, name);
    		ps.executeUpdate();
    	} catch(SQLException e) {
    		e.printStackTrace();
    	}
    }
    
    public List<Users> getUsers()
    {
    	List<Users> ret = new ArrayList<Users>();
    	String sql = "select * from Users";
    	try {
    		PreparedStatement PS = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
    		ResultSet RE = PS.executeQuery();
    		while (RE.next())
    		{
    			int id = RE.getInt("id");
    			String name = RE.getString("name");
    			ret.add(new Users(id,name));
    		}
    		
    	} catch (SQLException e) {
    		e.printStackTrace();
    	}
    	
    	return ret;
    }
    
    public List<BloodPresureModel> getEntries(int id)
    {
    	List<BloodPresureModel> ret = new ArrayList<BloodPresureModel>();
    	
    	String sql = "select * from BEntries where userId = ?";
    	
    	try {
    		PreparedStatement PS = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
    		PS.setInt(1, id);
    		ResultSet RE = PS.executeQuery();
    		while (RE.next())
    		{
    			int eId = RE.getInt("id");
    			int s = RE.getInt("SystoicVal");
    			int d = RE.getInt("DiastolicVal");
    			Timestamp time = RE.getTimestamp("entryTime");
    			BloodPresureModel entry = new BloodPresureModel(eId,time, s,d);
    			ret.add(entry);
    		}
    		
    	} catch (SQLException e) {
    		e.printStackTrace();
    	}
    	
    	return ret;
    }
    
}